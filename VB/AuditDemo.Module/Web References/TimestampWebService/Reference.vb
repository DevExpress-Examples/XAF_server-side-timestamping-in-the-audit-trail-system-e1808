'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

' 
' This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
' 
'INSTANT VB TODO TASK: There is no equivalent to #pragma directives in VB.NET:
'#pragma warning disable 1591


Imports Microsoft.VisualBasic
	Imports System.Diagnostics
	Imports System.Web.Services
	Imports System.ComponentModel
	Imports System.Web.Services.Protocols
	Imports System
	Imports System.Xml.Serialization
Namespace AuditDemo.Module.TimestampWebService


	''' <remarks/>
	<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Web.Services.WebServiceBindingAttribute(Name:="TimestampServiceSoap", Namespace:="http://localhost/")> _
	Partial Public Class TimestampService
		Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

		Private GetTimeOperationCompleted As System.Threading.SendOrPostCallback

		Private useDefaultCredentialsSetExplicitly As Boolean

		''' <remarks/>
		Public Sub New()
			Me.Url = My.Settings.AuditDemo_Module_TimestampWebService_TimestampService
			If (Me.IsLocalFileSystemWebService(Me.Url) = True) Then
				Me.UseDefaultCredentials = True
				Me.useDefaultCredentialsSetExplicitly = False
			Else
				Me.useDefaultCredentialsSetExplicitly = True
			End If
		End Sub

		Public Shadows Property Url() As String
			Get
				Return MyBase.Url
			End Get
			Set(ByVal value As String)
				If (((Me.IsLocalFileSystemWebService(MyBase.Url) = True) AndAlso (Me.useDefaultCredentialsSetExplicitly = False)) AndAlso (Me.IsLocalFileSystemWebService(value) = False)) Then
					MyBase.UseDefaultCredentials = False
				End If
				MyBase.Url = value
			End Set
		End Property

		Public Shadows Property UseDefaultCredentials() As Boolean
			Get
				Return MyBase.UseDefaultCredentials
			End Get
			Set(ByVal value As Boolean)
				MyBase.UseDefaultCredentials = value
				Me.useDefaultCredentialsSetExplicitly = True
			End Set
		End Property

		''' <remarks/>
		Public Event GetTimeCompleted As GetTimeCompletedEventHandler

		''' <remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/GetTime", RequestNamespace:="http://localhost/", ResponseNamespace:="http://localhost/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
		Public Function GetTime() As System.DateTime
			Dim results() As Object = Me.Invoke("GetTime", New Object(){})
			Return (CDate(results(0)))
		End Function

		''' <remarks/>
		Public Sub GetTimeAsync()
			Me.GetTimeAsync(Nothing)
		End Sub

		''' <remarks/>
		Public Sub GetTimeAsync(ByVal userState As Object)
			If (Me.GetTimeOperationCompleted Is Nothing) Then
				Me.GetTimeOperationCompleted = New System.Threading.SendOrPostCallback(AddressOf Me.OnGetTimeOperationCompleted)
			End If
			Me.InvokeAsync("GetTime", New Object(){}, Me.GetTimeOperationCompleted, userState)
		End Sub

		Private Sub OnGetTimeOperationCompleted(ByVal arg As Object)
			If (Me.GetTimeCompletedEvent IsNot Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = (CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs))
				RaiseEvent GetTimeCompleted(Me, New GetTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		''' <remarks/>
		Public Shadows Sub CancelAsync(ByVal userState As Object)
			MyBase.CancelAsync(userState)
		End Sub

		Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
			If ((url Is Nothing) OrElse (url = String.Empty)) Then
				Return False
			End If
			Dim wsUri As New System.Uri(url)
			If ((wsUri.Port >= 1024) AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
				Return True
			End If
			Return False
		End Function
	End Class

	''' <remarks/>
	<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")> _
	Public Delegate Sub GetTimeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimeCompletedEventArgs)

	''' <remarks/>
	<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")> _
	Partial Public Class GetTimeCompletedEventArgs
		Inherits System.ComponentModel.AsyncCompletedEventArgs

		Private results() As Object

		Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
			MyBase.New(exception, cancelled, userState)
			Me.results = results
		End Sub

		''' <remarks/>
		Public ReadOnly Property Result() As System.DateTime
			Get
				Me.RaiseExceptionIfNecessary()
				Return (CDate(Me.results(0)))
			End Get
		End Property
	End Class
End Namespace

'INSTANT VB TODO TASK: There is no equivalent to #pragma directives in VB.NET:
'#pragma warning restore 1591
