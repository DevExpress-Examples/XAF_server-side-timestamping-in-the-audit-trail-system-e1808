Imports System.Xml.Serialization
Imports System
Imports System.Web.Services.Protocols
Imports System.ComponentModel
Imports System.Web.Services
Imports System.Diagnostics

'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

' 
' This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
' 
#Disable Warning BC1591

Namespace AuditDemo.Module.TimestampWebService


	''' <remarks/>
	<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>
	<System.Diagnostics.DebuggerStepThroughAttribute()>
	<System.ComponentModel.DesignerCategoryAttribute("code")>
	<System.Web.Services.WebServiceBindingAttribute(Name:="TimestampServiceSoap", [Namespace]:="http://localhost/")>
	Partial Public Class TimestampService
		Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

		Private GetTimeOperationCompleted As System.Threading.SendOrPostCallback

		Private useDefaultCredentialsSetExplicitly As Boolean

		''' <remarks/>
		Public Sub New()
			Me.Url = My.Settings.Default.AuditDemo_Module_TimestampWebService_TimestampService
			If (Me.IsLocalFileSystemWebService(Me.Url) = True) Then
				Me.UseDefaultCredentials = True
				Me.useDefaultCredentialsSetExplicitly = False
			Else
				Me.useDefaultCredentialsSetExplicitly = True
			End If
		End Sub

		Public Shadows Property Url() As String
			Get
				Return MyBase.Url
			End Get
			Set(ByVal value As String)
				If (((Me.IsLocalFileSystemWebService(MyBase.Url) = True) AndAlso (Me.useDefaultCredentialsSetExplicitly = False)) AndAlso (Me.IsLocalFileSystemWebService(value) = False)) Then
					MyBase.UseDefaultCredentials = False
				End If
				MyBase.Url = value
			End Set
		End Property

		Public Shadows Property UseDefaultCredentials() As Boolean
			Get
				Return MyBase.UseDefaultCredentials
			End Get
			Set(ByVal value As Boolean)
				MyBase.UseDefaultCredentials = value
				Me.useDefaultCredentialsSetExplicitly = True
			End Set
		End Property

		''' <remarks/>
		Public Event GetTimeCompleted As GetTimeCompletedEventHandler

		''' <remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/GetTime", RequestNamespace:="http://localhost/", ResponseNamespace:="http://localhost/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
		Public Function GetTime() As DateTime
			Dim results() As Object = Me.Invoke("GetTime", New Object(){})
			Return (DirectCast(results(0), DateTime))
		End Function

		''' <remarks/>
		Public Sub GetTimeAsync()
			Me.GetTimeAsync(Nothing)
		End Sub

		''' <remarks/>
		Public Sub GetTimeAsync(ByVal userState As Object)
			If (Me.GetTimeOperationCompleted Is Nothing) Then
				Me.GetTimeOperationCompleted = New System.Threading.SendOrPostCallback(AddressOf Me.OnGetTimeOperationCompleted)
			End If
			Me.InvokeAsync("GetTime", New Object(){}, Me.GetTimeOperationCompleted, userState)
		End Sub

		Private Sub OnGetTimeOperationCompleted(ByVal arg As Object)
			If (Me.GetTimeCompletedEvent IsNot Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = (DirectCast(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs))
				RaiseEvent GetTimeCompleted(Me, New GetTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		''' <remarks/>
		Public Shadows Sub CancelAsync(ByVal userState As Object)
			MyBase.CancelAsync(userState)
		End Sub

'INSTANT VB NOTE: The variable url was renamed since Visual Basic does not handle local variables named the same as class members well:
		Private Function IsLocalFileSystemWebService(ByVal url_Conflict As String) As Boolean
			If ((url_Conflict Is Nothing) OrElse (url_Conflict = String.Empty)) Then
				Return False
			End If
			Dim wsUri As New System.Uri(url_Conflict)
			If ((wsUri.Port >= 1024) AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
				Return True
			End If
			Return False
		End Function
	End Class

	''' <remarks/>
	<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>
	Public Delegate Sub GetTimeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimeCompletedEventArgs)

	''' <remarks/>
	<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>
	<System.Diagnostics.DebuggerStepThroughAttribute()>
	<System.ComponentModel.DesignerCategoryAttribute("code")>
	Partial Public Class GetTimeCompletedEventArgs
		Inherits System.ComponentModel.AsyncCompletedEventArgs

		Private results() As Object

'INSTANT VB NOTE: The variable cancelled was renamed since Visual Basic does not handle local variables named the same as class members well:
'INSTANT VB NOTE: The variable userState was renamed since Visual Basic does not handle local variables named the same as class members well:
		Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled_Conflict As Boolean, ByVal userState_Conflict As Object)
			MyBase.New(exception, cancelled_Conflict, userState_Conflict)
			Me.results = results
		End Sub

		''' <remarks/>
		Public ReadOnly Property Result() As DateTime
			Get
				Me.RaiseExceptionIfNecessary()
				Return (DirectCast(Me.results(0), DateTime))
			End Get
		End Property
	End Class
End Namespace

#Enable Warning BC1591
